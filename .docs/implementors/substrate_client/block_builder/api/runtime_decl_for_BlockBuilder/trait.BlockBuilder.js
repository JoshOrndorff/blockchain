(function() {var implementors = {};
implementors["katal_runtime"] = [{text:"impl BlockBuilder&lt;<a class=\"struct\" href=\"sr_primitives/generic/block/struct.Block.html\" title=\"struct sr_primitives::generic::block::Block\">Block</a>&lt;<a class=\"struct\" href=\"sr_primitives/generic/header/struct.Header.html\" title=\"struct sr_primitives::generic::header::Header\">Header</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"struct\" href=\"sr_primitives/traits/struct.BlakeTwo256.html\" title=\"struct sr_primitives::traits::BlakeTwo256\">BlakeTwo256</a>&gt;, <a class=\"struct\" href=\"sr_primitives/generic/unchecked_mortal_compact_extrinsic/struct.UncheckedMortalCompactExtrinsic.html\" title=\"struct sr_primitives::generic::unchecked_mortal_compact_extrinsic::UncheckedMortalCompactExtrinsic\">UncheckedMortalCompactExtrinsic</a>&lt;&lt;<a class=\"struct\" href=\"srml_indices/struct.Module.html\" title=\"struct srml_indices::Module\">Module</a>&lt;<a class=\"struct\" href=\"katal_runtime/struct.Runtime.html\" title=\"struct katal_runtime::Runtime\">Runtime</a>&gt; as <a class=\"trait\" href=\"sr_primitives/traits/trait.StaticLookup.html\" title=\"trait sr_primitives::traits::StaticLookup\">StaticLookup</a>&gt;::<a class=\"type\" href=\"sr_primitives/traits/trait.StaticLookup.html#associatedtype.Source\" title=\"type sr_primitives::traits::StaticLookup::Source\">Source</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>, <a class=\"enum\" href=\"katal_runtime/enum.Call.html\" title=\"enum katal_runtime::Call\">Call</a>, <a class=\"struct\" href=\"substrate_primitives/sr25519/struct.Signature.html\" title=\"struct substrate_primitives::sr25519::Signature\">Signature</a>&gt;&gt;&gt; for <a class=\"struct\" href=\"katal_runtime/struct.Runtime.html\" title=\"struct katal_runtime::Runtime\">Runtime</a>",synthetic:false,types:["katal_runtime::Runtime"]},];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        
})()
